// Generated by CoffeeScript 1.7.1
var EventEmitter, Log, Screen, Window, X, mouse, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

_ = require('underscore');

EventEmitter = require('events').EventEmitter;

X = require('./X');

Log = require('./Log');

mouse = require('../common/Mouse');

Window = require('./Window');

Screen = (function(_super) {
  __extends(Screen, _super);

  function Screen(socket) {
    this.socket = socket;
    this.windows = {};
    this.size = {
      width: X.screen.pixel_width,
      height: X.screen.pixel_height
    };
    this.mouse = mouse;
    this.mouse.on('moved', (function(_this) {
      return function() {
        return _this.HasReachedEdge(_this.mouse.pos);
      };
    })(this));
  }

  Screen.prototype.NewWindow = function(blob) {
    var win;
    win = new Window(blob);
    win.on('moved', (function(_this) {
      return function() {
        return _this.HasReachedEdge(win);
      };
    })(this));
    this.AddWindow(win);
    return win;
  };

  Screen.prototype.AddWindow = function(win) {
    return this.windows[win.id] = win;
  };

  Screen.prototype.DelWindow = function(win) {
    return this.windows = _(this.windows).reject(function(item) {
      if (item != null) {
        return item.id === win.id;
      } else {
        return false;
      }
    });
  };

  Screen.prototype.HasReachedEdge = function(pos) {
    if (pos.x <= 0) {
      return this.emit('switchLeft', pos);
    } else if (pos.y <= 0) {
      return this.emit('switchTop', pos);
    } else if (pos.x >= this.size.width - 1) {
      return this.emit('switchRight', pos);
    } else if (pos.y >= this.size.height - 1) {
      return this.emit('switchBottom', pos);
    }
  };

  Screen.prototype.IsFullScreen = function(win) {
    if (!win.x && win.width === this.size.width && win.height > this.size.height - 100) {
      return true;
    }
    return false;
  };

  return Screen;

})(EventEmitter);

module.exports = Screen;
