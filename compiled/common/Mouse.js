// Generated by CoffeeScript 1.7.1
var EventEmitter, Log, Mouse, X, exec,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

exec = require('child_process').exec;

EventEmitter = require('events').EventEmitter;

X = require('../common/X');

Log = require('../common/Log');

Mouse = (function(_super) {
  __extends(Mouse, _super);

  function Mouse() {
    this.pos = {
      x: 0,
      y: 0
    };
    X.on('event', (function(_this) {
      return function(ev) {
        if (ev.name === 'MotionNotify') {
          _this.pos = {
            x: ev.rootx,
            y: ev.rooty
          };
          _this.emit('moved');
          return _this.HasReachedEdge();
        }
      };
    })(this));
  }

  Mouse.prototype.MovePointer = function(pos) {
    this.pos = pos;
    return X.MovePointer(this.pos);
  };

  Mouse.prototype.MovePointerRelative = function(delta) {
    this.pos = {
      x: this.pos.x + delta.x,
      y: this.pos.y + delta.y
    };
    return X.MovePointer(this.pos);
  };

  Mouse.prototype.HasReachedEdge = function() {
    if (this.pos.x <= 0) {
      return this.emit('switchLeft', this.pos);
    } else if (this.pos.y <= 0) {
      return this.emit('switchTop', this.pos);
    } else if (this.pos.x >= X.screen.pixel_width) {
      return this.emit('switchRight', this.pos);
    } else if (this.pos.y >= X.screen.pixel_height) {
      return this.emit('switchBottom', this.pos);
    }
  };

  Mouse.prototype._Xte = function(order, args) {
    return exec("xte -x :0.0 '" + order + " " + args + "'");
  };

  Mouse.prototype.ButtonDown = function(button) {
    return this._Xte('mousedown', button);
  };

  Mouse.prototype.ButtonUp = function(button) {
    return this._Xte('mouseup', button);
  };

  return Mouse;

})(EventEmitter);

module.exports = new Mouse;
