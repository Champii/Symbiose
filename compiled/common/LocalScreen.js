// Generated by CoffeeScript 1.7.1
var EventEmitter, LocalScreen, Log, Screen, Window, X, mouse, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

_ = require('underscore');

EventEmitter = require('events').EventEmitter;

X = require('./X');

Log = require('./Log');

mouse = require('./Mouse');

Window = require('./Window');

Screen = require('./Screen');

LocalScreen = (function(_super) {
  __extends(LocalScreen, _super);

  function LocalScreen() {
    LocalScreen.__super__.constructor.call(this);
    this.size = {
      width: X.screen.pixel_width,
      height: X.screen.pixel_height
    };
    this.mouse = mouse;
  }

  LocalScreen.prototype.NewWindow = function(blob) {
    var win;
    win = LocalScreen.__super__.NewWindow.call(this, blob);
    return win.on('moved', (function(_this) {
      return function() {
        return _this.HasReachedEdge(win);
      };
    })(this));
  };

  LocalScreen.prototype.HasReachedEdge = function(obj) {
    var edge;
    edge = LocalScreen.__super__.HasReachedEdge.call(this, obj);
    if (edge) {
      return this.emit('switch' + edge, obj);
    }
  };

  return LocalScreen;

})(Screen);

module.exports = LocalScreen;
