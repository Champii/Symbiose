// Generated by CoffeeScript 1.7.1
var Client, Config, Log, VirtualDisplayClient, X, config, exports, io, keyboard, mouse;

io = require('socket.io-client');

X = require('../common/X');

Log = require('../common/Log');

mouse = require('../common/Mouse');

keyboard = require('../common/Keyboard');

Config = require('../gui/js/util/config');

VirtualDisplayClient = require('./VirtualDisplayClient');

config = new Config;

Client = (function() {
  function Client() {
    Log.SetLevel(3);
    this.mouse = mouse;
    this.keyboard = keyboard;
    X.Init((function(_this) {
      return function() {
        _this.socket = io('http://' + config.host + ':' + config.port);
        _this.virtDisplay = new VirtualDisplayClient(_this.socket);
        _this.socket.on('askScreenInfos', function() {
          return _this.socket.emit('screenInfos', {
            width: _this.virtDisplay.mainScreen.size.width,
            height: _this.virtDisplay.mainScreen.size.height,
            name: 'client1'
          });
        });
        _this.socket.on('mousePos', function(pos) {
          return _this.mouse.MovePointer(pos);
        });
        _this.socket.on('buttonDown', function(i) {
          return _this.mouse.ButtonDown(i);
        });
        _this.socket.on('buttonUp', function(i) {
          return _this.mouse.ButtonUp(i);
        });
        _this.socket.on('keyDown', function(i) {
          return _this.keyboard.KeyDown(i);
        });
        _this.socket.on('keyUp', function(i) {
          return _this.keyboard.KeyUp(i);
        });
        _this.socket.on('disconnect', function() {
          return Log.Warning('Disconnected');
        });
        return _this.socket.on('error', function(err) {
          return Log.Error(err);
        });
      };
    })(this));
  }

  Client.prototype.Stop = function() {
    return this.socket = null;
  };

  return Client;

})();

module.exports = exports = Client;
