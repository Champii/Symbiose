// Generated by CoffeeScript 1.7.1
var gui;

gui = require('nw.gui');

this.symbiose = angular.module('symbiose', ['ngRoute']);

this.symbiose.service('windowService', [
  '$rootScope', function($rootScope) {
    this.visible = true;
    this.win = gui.Window.get();
    this.win.on('close', (function(_this) {
      return function() {
        _this.win.hide();
        return _this.visible = false;
      };
    })(this));
    return this;
  }
]);

this.symbiose.service('trayService', [
  '$rootScope', 'windowService', function($rootScope, windowService) {
    this.tray = new gui.Tray({
      title: 'Tray',
      icon: 'gui/img/logo.jpg'
    });
    this.tray.on('click', function(a, b) {
      windowService.visible = !windowService.visible;
      if (windowService.visible) {
        windowService.win.show();
      }
      if (!windowService.visible) {
        return windowService.win.hide();
      }
    });
    return this;
  }
]);

this.symbiose.service('trayMenu', [
  '$rootScope', 'windowService', 'trayService', function($rootScope, windowService, trayService) {
    this.menu = new gui.Menu();
    this.quitButton = new gui.MenuItem({
      label: 'Quit',
      click: function() {
        return windowService.win.close(1);
      }
    });
    this.startButton = new gui.MenuItem({
      label: 'Start',
      click: function() {
        return $rootScope.$emit('start');
      }
    });
    this.stopButton = new gui.MenuItem({
      label: 'Stop',
      click: function() {
        return $rootScope.$emit('stop');
      },
      enabled: false
    });
    this.menu.append(this.startButton);
    this.menu.append(this.stopButton);
    this.menu.append(new gui.MenuItem({
      type: 'separator'
    }));
    this.menu.append(this.quitButton);
    trayService.tray.menu = this.menu;
    return this;
  }
]);

this.symbiose.service('windowMenuService', [
  'config', 'windowService', function(config, windowService) {
    var winFileMenu;
    this.winMenu = new gui.Menu({
      type: 'menubar'
    });
    winFileMenu = new gui.MenuItem({
      label: 'File'
    });
    winFileMenu.submenu = new gui.Menu;
    winFileMenu.submenu.append(new gui.MenuItem({
      label: 'Reset',
      click: function() {
        return config.Reset();
      }
    }));
    winFileMenu.submenu.append(new gui.MenuItem({
      label: 'Quit',
      click: function() {
        return windowService.win.close(1);
      }
    }));
    this.winMenu.append(winFileMenu);
    windowService.win.menu = this.winMenu;
    return this;
  }
]);
