// Generated by CoffeeScript 1.7.1
var Config, fs;

fs = require('fs');

Config = (function() {
  function Config() {
    this.path = '../config/';
    this.filename = 'config';
  }

  Config.prototype.Open = function(mode) {
    return this.fd = fs.openSync(this.path + this.filename, mode);
  };

  Config.prototype.Close = function() {
    return fs.closeSync(this.fd);
  };

  Config.prototype.Create = function() {
    this.Open('a');
    return this.Close();
  };

  Config.prototype.Parse = function() {
    var k, test, v, _results;
    test = JSON.parse(fs.readFileSync(this.path + this.filename, {
      encoding: 'UTF8'
    }));
    console.log('parse', test);
    _results = [];
    for (k in test) {
      v = test[k];
      _results.push(this[k] = v);
    }
    return _results;
  };

  Config.prototype.Write = function() {
    var k, obj, v;
    obj = {};
    for (k in this) {
      v = this[k];
      if (k !== 'path' && k !== 'filename' && k !== 'fd') {
        obj[k] = v;
      }
    }
    console.log('write', obj);
    return fs.writeFileSync(this.path + this.filename, JSON.stringify(obj), {
      encoding: 'UTF8'
    });
  };

  Config.prototype.Exists = function() {
    return fs.existsSync(this.path + this.filename);
  };

  Config.prototype._DefaultConfig = function() {
    return {
      mode: null
    };
  };

  return Config;

})();

this.config = new Config;
