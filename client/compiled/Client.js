// Generated by CoffeeScript 1.7.1
var Client, Config, Log, MouseWriter, X, config, exports, io;

io = require('socket.io-client');

Log = require('../../common/compiled/Log');

MouseWriter = require('../../common/compiled/MouseWriter');

Config = require('../../gui/js/compiled/util/config');

X = require('../../common/compiled/X');

config = new Config;

Client = (function() {
  function Client() {
    Log.SetLevel(2);
    this.X = new X((function(_this) {
      return function() {
        console.log('lol');
        _this.screen = {
          width: _this.X.display.screen[0].pixel_width,
          height: _this.X.display.screen[0].pixel_height
        };
        Log.Warning(_this.screen);
        _this.socket = io('http://' + config.host + ':' + config.port);
        _this.socket.on('askScreenInfos', function() {
          return _this.socket.emit('screenInfos', _this.screen);
        });
        _this.mouseWrite = new MouseWriter;
        _this.socket.on('initialCursorPos', function(pos) {
          Log.Log('initial pos', pos);
          return _this.mouseWrite.MoveTo(pos);
        });
        _this.socket.on('mousePos', function(pos) {
          Log.Log('mouse pos', pos);
          return _this.mouseWrite.MoveTo(pos);
        });
        _this.socket.on('buttonDown', function(i) {
          return _this.mouseWrite.ButtonDown(i);
        });
        _this.socket.on('buttonUp', function(i) {
          return _this.mouseWrite.ButtonUp(i);
        });
        _this.socket.on('window', function(win) {
          console.log('Window info !');
          return _this.X.FillWindow(win);
        });
        _this.socket.on('disconnect', function() {
          return Log.Warning('Disconnected');
        });
        return _this.socket.on('error', function(err) {
          return Log.Error(err);
        });
      };
    })(this));
  }

  Client.prototype.Stop = function() {
    return this.socket = null;
  };

  return Client;

})();

module.exports = exports = Client;
